name: Deployment

#on: 
#  pull_request:
#    branches: [*]

on:
    push: 
      branches: 
        - feature/second-interview 
#      paths:
#        - "terraform/**"  
  
env:
  DEPLOY_DIR: "terraform/"
  AWS_ACCESS_KEY_ID: ${{ secrets.Terraform_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.Terraform_SECRET_KEY }}
  AWS_DEFAULT_REGION: eu-central-1

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: check version
      id: version
      run: terraform -version
    - name: Terraform Init
      id: init
      run: terraform init -backend
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -lock=false
      continue-on-error: true
    - name: apply the templates
      run: terraform apply --auto-approve -lock=false
      
  deploy-configmanagement:

    runs-on: ubuntu-latest
      
    steps:
    - name: checkout Repo
      uses: actions/checkout@v1
    - name: setup ansible
      uses: ./.github/actions/ansible
    - name: setup and check ansible connectivity
      run: | 
        ansible -m ping all
    #- name: rollout the configmanagement
    #  run: |
    #    ansible-playbook -i inventories/deploy.yml rollout_playbook.yml